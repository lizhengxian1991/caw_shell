// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/navigation_interception/NavigationParams

#ifndef org_chromium_components_navigation_interception_NavigationParams_JNI
#define org_chromium_components_navigation_interception_NavigationParams_JNI

#include <jni.h>

#include "base/android/jni_android.h"
#include "base/android/scoped_java_ref.h"
#include "base/basictypes.h"
#include "base/logging.h"

using base::android::ScopedJavaLocalRef;

// Step 1: forward declarations.
namespace {
const char kNavigationParamsClassPath[] =
    "org/chromium/components/navigation_interception/NavigationParams";
// Leaking this jclass as we cannot use LazyInstance from some threads.
jclass g_NavigationParams_clazz = NULL;
}  // namespace

// Step 2: method stubs.

static base::subtle::AtomicWord g_NavigationParams_create = 0;
static ScopedJavaLocalRef<jobject> Java_NavigationParams_create(JNIEnv* env,
    jstring url,
    jboolean isPost,
    jboolean hasUserGesture,
    jint pageTransitionType,
    jboolean isRedirect) {
  /* Must call RegisterNativesImpl()  */
  DCHECK(g_NavigationParams_clazz);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, g_NavigationParams_clazz,
      "create",

"("
"Ljava/lang/String;"
"Z"
"Z"
"I"
"Z"
")"
"Lorg/chromium/components/navigation_interception/NavigationParams;",
      &g_NavigationParams_create);

  jobject ret =
    env->CallStaticObjectMethod(g_NavigationParams_clazz,
      method_id, url, isPost, hasUserGesture, pageTransitionType, isRedirect);
  base::android::CheckException(env);
  return ScopedJavaLocalRef<jobject>(env, ret);
}

// Step 3: RegisterNatives.

static bool RegisterNativesImpl(JNIEnv* env) {

  g_NavigationParams_clazz = reinterpret_cast<jclass>(env->NewGlobalRef(
      base::android::GetClass(env, kNavigationParamsClassPath).obj()));
  return true;
}

#endif  // org_chromium_components_navigation_interception_NavigationParams_JNI
